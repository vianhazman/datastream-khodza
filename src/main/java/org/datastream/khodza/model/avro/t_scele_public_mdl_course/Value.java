/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.datastream.khodza.model.avro.t_scele_public_mdl_course;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Value extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1893031755849049397L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"org.datastream.khodza.model.avro.t_scele_public_mdl_course\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"category\",\"type\":\"long\"},{\"name\":\"sortorder\",\"type\":\"long\"},{\"name\":\"fullname\",\"type\":\"string\"},{\"name\":\"shortname\",\"type\":\"string\"},{\"name\":\"idnumber\",\"type\":\"string\"},{\"name\":\"summary\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"summaryformat\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"showgrades\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"newsitems\",\"type\":\"int\"},{\"name\":\"startdate\",\"type\":\"long\"},{\"name\":\"marker\",\"type\":\"long\"},{\"name\":\"maxbytes\",\"type\":\"long\"},{\"name\":\"legacyfiles\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"showreports\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"visible\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"visibleold\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"groupmode\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"groupmodeforce\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"defaultgroupingid\",\"type\":\"long\"},{\"name\":\"lang\",\"type\":\"string\"},{\"name\":\"calendartype\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"string\"},{\"name\":\"timecreated\",\"type\":\"long\"},{\"name\":\"timemodified\",\"type\":\"long\"},{\"name\":\"requested\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"enablecompletion\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"completionnotify\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"cacherev\",\"type\":\"long\"},{\"name\":\"enddate\",\"type\":\"long\"}],\"connect.name\":\"t_scele.public.mdl_course.Value\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long id;
  @Deprecated public long category;
  @Deprecated public long sortorder;
  @Deprecated public java.lang.CharSequence fullname;
  @Deprecated public java.lang.CharSequence shortname;
  @Deprecated public java.lang.CharSequence idnumber;
  @Deprecated public java.lang.CharSequence summary;
  @Deprecated public int summaryformat;
  @Deprecated public java.lang.CharSequence format;
  @Deprecated public int showgrades;
  @Deprecated public int newsitems;
  @Deprecated public long startdate;
  @Deprecated public long marker;
  @Deprecated public long maxbytes;
  @Deprecated public int legacyfiles;
  @Deprecated public int showreports;
  @Deprecated public int visible;
  @Deprecated public int visibleold;
  @Deprecated public int groupmode;
  @Deprecated public int groupmodeforce;
  @Deprecated public long defaultgroupingid;
  @Deprecated public java.lang.CharSequence lang;
  @Deprecated public java.lang.CharSequence calendartype;
  @Deprecated public java.lang.CharSequence theme;
  @Deprecated public long timecreated;
  @Deprecated public long timemodified;
  @Deprecated public int requested;
  @Deprecated public int enablecompletion;
  @Deprecated public int completionnotify;
  @Deprecated public long cacherev;
  @Deprecated public long enddate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Value() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param category The new value for category
   * @param sortorder The new value for sortorder
   * @param fullname The new value for fullname
   * @param shortname The new value for shortname
   * @param idnumber The new value for idnumber
   * @param summary The new value for summary
   * @param summaryformat The new value for summaryformat
   * @param format The new value for format
   * @param showgrades The new value for showgrades
   * @param newsitems The new value for newsitems
   * @param startdate The new value for startdate
   * @param marker The new value for marker
   * @param maxbytes The new value for maxbytes
   * @param legacyfiles The new value for legacyfiles
   * @param showreports The new value for showreports
   * @param visible The new value for visible
   * @param visibleold The new value for visibleold
   * @param groupmode The new value for groupmode
   * @param groupmodeforce The new value for groupmodeforce
   * @param defaultgroupingid The new value for defaultgroupingid
   * @param lang The new value for lang
   * @param calendartype The new value for calendartype
   * @param theme The new value for theme
   * @param timecreated The new value for timecreated
   * @param timemodified The new value for timemodified
   * @param requested The new value for requested
   * @param enablecompletion The new value for enablecompletion
   * @param completionnotify The new value for completionnotify
   * @param cacherev The new value for cacherev
   * @param enddate The new value for enddate
   */
  public Value(java.lang.Long id, java.lang.Long category, java.lang.Long sortorder, java.lang.CharSequence fullname, java.lang.CharSequence shortname, java.lang.CharSequence idnumber, java.lang.CharSequence summary, java.lang.Integer summaryformat, java.lang.CharSequence format, java.lang.Integer showgrades, java.lang.Integer newsitems, java.lang.Long startdate, java.lang.Long marker, java.lang.Long maxbytes, java.lang.Integer legacyfiles, java.lang.Integer showreports, java.lang.Integer visible, java.lang.Integer visibleold, java.lang.Integer groupmode, java.lang.Integer groupmodeforce, java.lang.Long defaultgroupingid, java.lang.CharSequence lang, java.lang.CharSequence calendartype, java.lang.CharSequence theme, java.lang.Long timecreated, java.lang.Long timemodified, java.lang.Integer requested, java.lang.Integer enablecompletion, java.lang.Integer completionnotify, java.lang.Long cacherev, java.lang.Long enddate) {
    this.id = id;
    this.category = category;
    this.sortorder = sortorder;
    this.fullname = fullname;
    this.shortname = shortname;
    this.idnumber = idnumber;
    this.summary = summary;
    this.summaryformat = summaryformat;
    this.format = format;
    this.showgrades = showgrades;
    this.newsitems = newsitems;
    this.startdate = startdate;
    this.marker = marker;
    this.maxbytes = maxbytes;
    this.legacyfiles = legacyfiles;
    this.showreports = showreports;
    this.visible = visible;
    this.visibleold = visibleold;
    this.groupmode = groupmode;
    this.groupmodeforce = groupmodeforce;
    this.defaultgroupingid = defaultgroupingid;
    this.lang = lang;
    this.calendartype = calendartype;
    this.theme = theme;
    this.timecreated = timecreated;
    this.timemodified = timemodified;
    this.requested = requested;
    this.enablecompletion = enablecompletion;
    this.completionnotify = completionnotify;
    this.cacherev = cacherev;
    this.enddate = enddate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return category;
    case 2: return sortorder;
    case 3: return fullname;
    case 4: return shortname;
    case 5: return idnumber;
    case 6: return summary;
    case 7: return summaryformat;
    case 8: return format;
    case 9: return showgrades;
    case 10: return newsitems;
    case 11: return startdate;
    case 12: return marker;
    case 13: return maxbytes;
    case 14: return legacyfiles;
    case 15: return showreports;
    case 16: return visible;
    case 17: return visibleold;
    case 18: return groupmode;
    case 19: return groupmodeforce;
    case 20: return defaultgroupingid;
    case 21: return lang;
    case 22: return calendartype;
    case 23: return theme;
    case 24: return timecreated;
    case 25: return timemodified;
    case 26: return requested;
    case 27: return enablecompletion;
    case 28: return completionnotify;
    case 29: return cacherev;
    case 30: return enddate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: category = (java.lang.Long)value$; break;
    case 2: sortorder = (java.lang.Long)value$; break;
    case 3: fullname = (java.lang.CharSequence)value$; break;
    case 4: shortname = (java.lang.CharSequence)value$; break;
    case 5: idnumber = (java.lang.CharSequence)value$; break;
    case 6: summary = (java.lang.CharSequence)value$; break;
    case 7: summaryformat = (java.lang.Integer)value$; break;
    case 8: format = (java.lang.CharSequence)value$; break;
    case 9: showgrades = (java.lang.Integer)value$; break;
    case 10: newsitems = (java.lang.Integer)value$; break;
    case 11: startdate = (java.lang.Long)value$; break;
    case 12: marker = (java.lang.Long)value$; break;
    case 13: maxbytes = (java.lang.Long)value$; break;
    case 14: legacyfiles = (java.lang.Integer)value$; break;
    case 15: showreports = (java.lang.Integer)value$; break;
    case 16: visible = (java.lang.Integer)value$; break;
    case 17: visibleold = (java.lang.Integer)value$; break;
    case 18: groupmode = (java.lang.Integer)value$; break;
    case 19: groupmodeforce = (java.lang.Integer)value$; break;
    case 20: defaultgroupingid = (java.lang.Long)value$; break;
    case 21: lang = (java.lang.CharSequence)value$; break;
    case 22: calendartype = (java.lang.CharSequence)value$; break;
    case 23: theme = (java.lang.CharSequence)value$; break;
    case 24: timecreated = (java.lang.Long)value$; break;
    case 25: timemodified = (java.lang.Long)value$; break;
    case 26: requested = (java.lang.Integer)value$; break;
    case 27: enablecompletion = (java.lang.Integer)value$; break;
    case 28: completionnotify = (java.lang.Integer)value$; break;
    case 29: cacherev = (java.lang.Long)value$; break;
    case 30: enddate = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public java.lang.Long getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.Long value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'sortorder' field.
   * @return The value of the 'sortorder' field.
   */
  public java.lang.Long getSortorder() {
    return sortorder;
  }

  /**
   * Sets the value of the 'sortorder' field.
   * @param value the value to set.
   */
  public void setSortorder(java.lang.Long value) {
    this.sortorder = value;
  }

  /**
   * Gets the value of the 'fullname' field.
   * @return The value of the 'fullname' field.
   */
  public java.lang.CharSequence getFullname() {
    return fullname;
  }

  /**
   * Sets the value of the 'fullname' field.
   * @param value the value to set.
   */
  public void setFullname(java.lang.CharSequence value) {
    this.fullname = value;
  }

  /**
   * Gets the value of the 'shortname' field.
   * @return The value of the 'shortname' field.
   */
  public java.lang.CharSequence getShortname() {
    return shortname;
  }

  /**
   * Sets the value of the 'shortname' field.
   * @param value the value to set.
   */
  public void setShortname(java.lang.CharSequence value) {
    this.shortname = value;
  }

  /**
   * Gets the value of the 'idnumber' field.
   * @return The value of the 'idnumber' field.
   */
  public java.lang.CharSequence getIdnumber() {
    return idnumber;
  }

  /**
   * Sets the value of the 'idnumber' field.
   * @param value the value to set.
   */
  public void setIdnumber(java.lang.CharSequence value) {
    this.idnumber = value;
  }

  /**
   * Gets the value of the 'summary' field.
   * @return The value of the 'summary' field.
   */
  public java.lang.CharSequence getSummary() {
    return summary;
  }

  /**
   * Sets the value of the 'summary' field.
   * @param value the value to set.
   */
  public void setSummary(java.lang.CharSequence value) {
    this.summary = value;
  }

  /**
   * Gets the value of the 'summaryformat' field.
   * @return The value of the 'summaryformat' field.
   */
  public java.lang.Integer getSummaryformat() {
    return summaryformat;
  }

  /**
   * Sets the value of the 'summaryformat' field.
   * @param value the value to set.
   */
  public void setSummaryformat(java.lang.Integer value) {
    this.summaryformat = value;
  }

  /**
   * Gets the value of the 'format' field.
   * @return The value of the 'format' field.
   */
  public java.lang.CharSequence getFormat() {
    return format;
  }

  /**
   * Sets the value of the 'format' field.
   * @param value the value to set.
   */
  public void setFormat(java.lang.CharSequence value) {
    this.format = value;
  }

  /**
   * Gets the value of the 'showgrades' field.
   * @return The value of the 'showgrades' field.
   */
  public java.lang.Integer getShowgrades() {
    return showgrades;
  }

  /**
   * Sets the value of the 'showgrades' field.
   * @param value the value to set.
   */
  public void setShowgrades(java.lang.Integer value) {
    this.showgrades = value;
  }

  /**
   * Gets the value of the 'newsitems' field.
   * @return The value of the 'newsitems' field.
   */
  public java.lang.Integer getNewsitems() {
    return newsitems;
  }

  /**
   * Sets the value of the 'newsitems' field.
   * @param value the value to set.
   */
  public void setNewsitems(java.lang.Integer value) {
    this.newsitems = value;
  }

  /**
   * Gets the value of the 'startdate' field.
   * @return The value of the 'startdate' field.
   */
  public java.lang.Long getStartdate() {
    return startdate;
  }

  /**
   * Sets the value of the 'startdate' field.
   * @param value the value to set.
   */
  public void setStartdate(java.lang.Long value) {
    this.startdate = value;
  }

  /**
   * Gets the value of the 'marker' field.
   * @return The value of the 'marker' field.
   */
  public java.lang.Long getMarker() {
    return marker;
  }

  /**
   * Sets the value of the 'marker' field.
   * @param value the value to set.
   */
  public void setMarker(java.lang.Long value) {
    this.marker = value;
  }

  /**
   * Gets the value of the 'maxbytes' field.
   * @return The value of the 'maxbytes' field.
   */
  public java.lang.Long getMaxbytes() {
    return maxbytes;
  }

  /**
   * Sets the value of the 'maxbytes' field.
   * @param value the value to set.
   */
  public void setMaxbytes(java.lang.Long value) {
    this.maxbytes = value;
  }

  /**
   * Gets the value of the 'legacyfiles' field.
   * @return The value of the 'legacyfiles' field.
   */
  public java.lang.Integer getLegacyfiles() {
    return legacyfiles;
  }

  /**
   * Sets the value of the 'legacyfiles' field.
   * @param value the value to set.
   */
  public void setLegacyfiles(java.lang.Integer value) {
    this.legacyfiles = value;
  }

  /**
   * Gets the value of the 'showreports' field.
   * @return The value of the 'showreports' field.
   */
  public java.lang.Integer getShowreports() {
    return showreports;
  }

  /**
   * Sets the value of the 'showreports' field.
   * @param value the value to set.
   */
  public void setShowreports(java.lang.Integer value) {
    this.showreports = value;
  }

  /**
   * Gets the value of the 'visible' field.
   * @return The value of the 'visible' field.
   */
  public java.lang.Integer getVisible() {
    return visible;
  }

  /**
   * Sets the value of the 'visible' field.
   * @param value the value to set.
   */
  public void setVisible(java.lang.Integer value) {
    this.visible = value;
  }

  /**
   * Gets the value of the 'visibleold' field.
   * @return The value of the 'visibleold' field.
   */
  public java.lang.Integer getVisibleold() {
    return visibleold;
  }

  /**
   * Sets the value of the 'visibleold' field.
   * @param value the value to set.
   */
  public void setVisibleold(java.lang.Integer value) {
    this.visibleold = value;
  }

  /**
   * Gets the value of the 'groupmode' field.
   * @return The value of the 'groupmode' field.
   */
  public java.lang.Integer getGroupmode() {
    return groupmode;
  }

  /**
   * Sets the value of the 'groupmode' field.
   * @param value the value to set.
   */
  public void setGroupmode(java.lang.Integer value) {
    this.groupmode = value;
  }

  /**
   * Gets the value of the 'groupmodeforce' field.
   * @return The value of the 'groupmodeforce' field.
   */
  public java.lang.Integer getGroupmodeforce() {
    return groupmodeforce;
  }

  /**
   * Sets the value of the 'groupmodeforce' field.
   * @param value the value to set.
   */
  public void setGroupmodeforce(java.lang.Integer value) {
    this.groupmodeforce = value;
  }

  /**
   * Gets the value of the 'defaultgroupingid' field.
   * @return The value of the 'defaultgroupingid' field.
   */
  public java.lang.Long getDefaultgroupingid() {
    return defaultgroupingid;
  }

  /**
   * Sets the value of the 'defaultgroupingid' field.
   * @param value the value to set.
   */
  public void setDefaultgroupingid(java.lang.Long value) {
    this.defaultgroupingid = value;
  }

  /**
   * Gets the value of the 'lang' field.
   * @return The value of the 'lang' field.
   */
  public java.lang.CharSequence getLang() {
    return lang;
  }

  /**
   * Sets the value of the 'lang' field.
   * @param value the value to set.
   */
  public void setLang(java.lang.CharSequence value) {
    this.lang = value;
  }

  /**
   * Gets the value of the 'calendartype' field.
   * @return The value of the 'calendartype' field.
   */
  public java.lang.CharSequence getCalendartype() {
    return calendartype;
  }

  /**
   * Sets the value of the 'calendartype' field.
   * @param value the value to set.
   */
  public void setCalendartype(java.lang.CharSequence value) {
    this.calendartype = value;
  }

  /**
   * Gets the value of the 'theme' field.
   * @return The value of the 'theme' field.
   */
  public java.lang.CharSequence getTheme() {
    return theme;
  }

  /**
   * Sets the value of the 'theme' field.
   * @param value the value to set.
   */
  public void setTheme(java.lang.CharSequence value) {
    this.theme = value;
  }

  /**
   * Gets the value of the 'timecreated' field.
   * @return The value of the 'timecreated' field.
   */
  public java.lang.Long getTimecreated() {
    return timecreated;
  }

  /**
   * Sets the value of the 'timecreated' field.
   * @param value the value to set.
   */
  public void setTimecreated(java.lang.Long value) {
    this.timecreated = value;
  }

  /**
   * Gets the value of the 'timemodified' field.
   * @return The value of the 'timemodified' field.
   */
  public java.lang.Long getTimemodified() {
    return timemodified;
  }

  /**
   * Sets the value of the 'timemodified' field.
   * @param value the value to set.
   */
  public void setTimemodified(java.lang.Long value) {
    this.timemodified = value;
  }

  /**
   * Gets the value of the 'requested' field.
   * @return The value of the 'requested' field.
   */
  public java.lang.Integer getRequested() {
    return requested;
  }

  /**
   * Sets the value of the 'requested' field.
   * @param value the value to set.
   */
  public void setRequested(java.lang.Integer value) {
    this.requested = value;
  }

  /**
   * Gets the value of the 'enablecompletion' field.
   * @return The value of the 'enablecompletion' field.
   */
  public java.lang.Integer getEnablecompletion() {
    return enablecompletion;
  }

  /**
   * Sets the value of the 'enablecompletion' field.
   * @param value the value to set.
   */
  public void setEnablecompletion(java.lang.Integer value) {
    this.enablecompletion = value;
  }

  /**
   * Gets the value of the 'completionnotify' field.
   * @return The value of the 'completionnotify' field.
   */
  public java.lang.Integer getCompletionnotify() {
    return completionnotify;
  }

  /**
   * Sets the value of the 'completionnotify' field.
   * @param value the value to set.
   */
  public void setCompletionnotify(java.lang.Integer value) {
    this.completionnotify = value;
  }

  /**
   * Gets the value of the 'cacherev' field.
   * @return The value of the 'cacherev' field.
   */
  public java.lang.Long getCacherev() {
    return cacherev;
  }

  /**
   * Sets the value of the 'cacherev' field.
   * @param value the value to set.
   */
  public void setCacherev(java.lang.Long value) {
    this.cacherev = value;
  }

  /**
   * Gets the value of the 'enddate' field.
   * @return The value of the 'enddate' field.
   */
  public java.lang.Long getEnddate() {
    return enddate;
  }

  /**
   * Sets the value of the 'enddate' field.
   * @param value the value to set.
   */
  public void setEnddate(java.lang.Long value) {
    this.enddate = value;
  }

  /**
   * Creates a new Value RecordBuilder.
   * @return A new Value RecordBuilder
   */
  public static Value.Builder newBuilder() {
    return new Value.Builder();
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Value RecordBuilder
   */
  public static Value.Builder newBuilder(Value.Builder other) {
    return new Value.Builder(other);
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Value instance.
   * @param other The existing instance to copy.
   * @return A new Value RecordBuilder
   */
  public static Value.Builder newBuilder(Value other) {
    return new Value.Builder(other);
  }

  /**
   * RecordBuilder for Value instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Value>
    implements org.apache.avro.data.RecordBuilder<Value> {

    private long id;
    private long category;
    private long sortorder;
    private java.lang.CharSequence fullname;
    private java.lang.CharSequence shortname;
    private java.lang.CharSequence idnumber;
    private java.lang.CharSequence summary;
    private int summaryformat;
    private java.lang.CharSequence format;
    private int showgrades;
    private int newsitems;
    private long startdate;
    private long marker;
    private long maxbytes;
    private int legacyfiles;
    private int showreports;
    private int visible;
    private int visibleold;
    private int groupmode;
    private int groupmodeforce;
    private long defaultgroupingid;
    private java.lang.CharSequence lang;
    private java.lang.CharSequence calendartype;
    private java.lang.CharSequence theme;
    private long timecreated;
    private long timemodified;
    private int requested;
    private int enablecompletion;
    private int completionnotify;
    private long cacherev;
    private long enddate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Value.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.category)) {
        this.category = data().deepCopy(fields()[1].schema(), other.category);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sortorder)) {
        this.sortorder = data().deepCopy(fields()[2].schema(), other.sortorder);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fullname)) {
        this.fullname = data().deepCopy(fields()[3].schema(), other.fullname);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.shortname)) {
        this.shortname = data().deepCopy(fields()[4].schema(), other.shortname);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.idnumber)) {
        this.idnumber = data().deepCopy(fields()[5].schema(), other.idnumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.summary)) {
        this.summary = data().deepCopy(fields()[6].schema(), other.summary);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.summaryformat)) {
        this.summaryformat = data().deepCopy(fields()[7].schema(), other.summaryformat);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.format)) {
        this.format = data().deepCopy(fields()[8].schema(), other.format);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.showgrades)) {
        this.showgrades = data().deepCopy(fields()[9].schema(), other.showgrades);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.newsitems)) {
        this.newsitems = data().deepCopy(fields()[10].schema(), other.newsitems);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.startdate)) {
        this.startdate = data().deepCopy(fields()[11].schema(), other.startdate);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.marker)) {
        this.marker = data().deepCopy(fields()[12].schema(), other.marker);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.maxbytes)) {
        this.maxbytes = data().deepCopy(fields()[13].schema(), other.maxbytes);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.legacyfiles)) {
        this.legacyfiles = data().deepCopy(fields()[14].schema(), other.legacyfiles);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.showreports)) {
        this.showreports = data().deepCopy(fields()[15].schema(), other.showreports);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.visible)) {
        this.visible = data().deepCopy(fields()[16].schema(), other.visible);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.visibleold)) {
        this.visibleold = data().deepCopy(fields()[17].schema(), other.visibleold);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.groupmode)) {
        this.groupmode = data().deepCopy(fields()[18].schema(), other.groupmode);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.groupmodeforce)) {
        this.groupmodeforce = data().deepCopy(fields()[19].schema(), other.groupmodeforce);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.defaultgroupingid)) {
        this.defaultgroupingid = data().deepCopy(fields()[20].schema(), other.defaultgroupingid);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.lang)) {
        this.lang = data().deepCopy(fields()[21].schema(), other.lang);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.calendartype)) {
        this.calendartype = data().deepCopy(fields()[22].schema(), other.calendartype);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.theme)) {
        this.theme = data().deepCopy(fields()[23].schema(), other.theme);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.timecreated)) {
        this.timecreated = data().deepCopy(fields()[24].schema(), other.timecreated);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.timemodified)) {
        this.timemodified = data().deepCopy(fields()[25].schema(), other.timemodified);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.requested)) {
        this.requested = data().deepCopy(fields()[26].schema(), other.requested);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.enablecompletion)) {
        this.enablecompletion = data().deepCopy(fields()[27].schema(), other.enablecompletion);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.completionnotify)) {
        this.completionnotify = data().deepCopy(fields()[28].schema(), other.completionnotify);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.cacherev)) {
        this.cacherev = data().deepCopy(fields()[29].schema(), other.cacherev);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.enddate)) {
        this.enddate = data().deepCopy(fields()[30].schema(), other.enddate);
        fieldSetFlags()[30] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Value instance
     * @param other The existing instance to copy.
     */
    private Builder(Value other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.category)) {
        this.category = data().deepCopy(fields()[1].schema(), other.category);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sortorder)) {
        this.sortorder = data().deepCopy(fields()[2].schema(), other.sortorder);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fullname)) {
        this.fullname = data().deepCopy(fields()[3].schema(), other.fullname);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.shortname)) {
        this.shortname = data().deepCopy(fields()[4].schema(), other.shortname);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.idnumber)) {
        this.idnumber = data().deepCopy(fields()[5].schema(), other.idnumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.summary)) {
        this.summary = data().deepCopy(fields()[6].schema(), other.summary);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.summaryformat)) {
        this.summaryformat = data().deepCopy(fields()[7].schema(), other.summaryformat);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.format)) {
        this.format = data().deepCopy(fields()[8].schema(), other.format);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.showgrades)) {
        this.showgrades = data().deepCopy(fields()[9].schema(), other.showgrades);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.newsitems)) {
        this.newsitems = data().deepCopy(fields()[10].schema(), other.newsitems);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.startdate)) {
        this.startdate = data().deepCopy(fields()[11].schema(), other.startdate);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.marker)) {
        this.marker = data().deepCopy(fields()[12].schema(), other.marker);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.maxbytes)) {
        this.maxbytes = data().deepCopy(fields()[13].schema(), other.maxbytes);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.legacyfiles)) {
        this.legacyfiles = data().deepCopy(fields()[14].schema(), other.legacyfiles);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.showreports)) {
        this.showreports = data().deepCopy(fields()[15].schema(), other.showreports);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.visible)) {
        this.visible = data().deepCopy(fields()[16].schema(), other.visible);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.visibleold)) {
        this.visibleold = data().deepCopy(fields()[17].schema(), other.visibleold);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.groupmode)) {
        this.groupmode = data().deepCopy(fields()[18].schema(), other.groupmode);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.groupmodeforce)) {
        this.groupmodeforce = data().deepCopy(fields()[19].schema(), other.groupmodeforce);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.defaultgroupingid)) {
        this.defaultgroupingid = data().deepCopy(fields()[20].schema(), other.defaultgroupingid);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.lang)) {
        this.lang = data().deepCopy(fields()[21].schema(), other.lang);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.calendartype)) {
        this.calendartype = data().deepCopy(fields()[22].schema(), other.calendartype);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.theme)) {
        this.theme = data().deepCopy(fields()[23].schema(), other.theme);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.timecreated)) {
        this.timecreated = data().deepCopy(fields()[24].schema(), other.timecreated);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.timemodified)) {
        this.timemodified = data().deepCopy(fields()[25].schema(), other.timemodified);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.requested)) {
        this.requested = data().deepCopy(fields()[26].schema(), other.requested);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.enablecompletion)) {
        this.enablecompletion = data().deepCopy(fields()[27].schema(), other.enablecompletion);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.completionnotify)) {
        this.completionnotify = data().deepCopy(fields()[28].schema(), other.completionnotify);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.cacherev)) {
        this.cacherev = data().deepCopy(fields()[29].schema(), other.cacherev);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.enddate)) {
        this.enddate = data().deepCopy(fields()[30].schema(), other.enddate);
        fieldSetFlags()[30] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public Value.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public Value.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public java.lang.Long getCategory() {
      return category;
    }

    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public Value.Builder setCategory(long value) {
      validate(fields()[1], value);
      this.category = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public Value.Builder clearCategory() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'sortorder' field.
      * @return The value.
      */
    public java.lang.Long getSortorder() {
      return sortorder;
    }

    /**
      * Sets the value of the 'sortorder' field.
      * @param value The value of 'sortorder'.
      * @return This builder.
      */
    public Value.Builder setSortorder(long value) {
      validate(fields()[2], value);
      this.sortorder = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'sortorder' field has been set.
      * @return True if the 'sortorder' field has been set, false otherwise.
      */
    public boolean hasSortorder() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'sortorder' field.
      * @return This builder.
      */
    public Value.Builder clearSortorder() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'fullname' field.
      * @return The value.
      */
    public java.lang.CharSequence getFullname() {
      return fullname;
    }

    /**
      * Sets the value of the 'fullname' field.
      * @param value The value of 'fullname'.
      * @return This builder.
      */
    public Value.Builder setFullname(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.fullname = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'fullname' field has been set.
      * @return True if the 'fullname' field has been set, false otherwise.
      */
    public boolean hasFullname() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'fullname' field.
      * @return This builder.
      */
    public Value.Builder clearFullname() {
      fullname = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'shortname' field.
      * @return The value.
      */
    public java.lang.CharSequence getShortname() {
      return shortname;
    }

    /**
      * Sets the value of the 'shortname' field.
      * @param value The value of 'shortname'.
      * @return This builder.
      */
    public Value.Builder setShortname(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.shortname = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'shortname' field has been set.
      * @return True if the 'shortname' field has been set, false otherwise.
      */
    public boolean hasShortname() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'shortname' field.
      * @return This builder.
      */
    public Value.Builder clearShortname() {
      shortname = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'idnumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getIdnumber() {
      return idnumber;
    }

    /**
      * Sets the value of the 'idnumber' field.
      * @param value The value of 'idnumber'.
      * @return This builder.
      */
    public Value.Builder setIdnumber(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.idnumber = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'idnumber' field has been set.
      * @return True if the 'idnumber' field has been set, false otherwise.
      */
    public boolean hasIdnumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'idnumber' field.
      * @return This builder.
      */
    public Value.Builder clearIdnumber() {
      idnumber = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'summary' field.
      * @return The value.
      */
    public java.lang.CharSequence getSummary() {
      return summary;
    }

    /**
      * Sets the value of the 'summary' field.
      * @param value The value of 'summary'.
      * @return This builder.
      */
    public Value.Builder setSummary(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.summary = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'summary' field has been set.
      * @return True if the 'summary' field has been set, false otherwise.
      */
    public boolean hasSummary() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'summary' field.
      * @return This builder.
      */
    public Value.Builder clearSummary() {
      summary = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'summaryformat' field.
      * @return The value.
      */
    public java.lang.Integer getSummaryformat() {
      return summaryformat;
    }

    /**
      * Sets the value of the 'summaryformat' field.
      * @param value The value of 'summaryformat'.
      * @return This builder.
      */
    public Value.Builder setSummaryformat(int value) {
      validate(fields()[7], value);
      this.summaryformat = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'summaryformat' field has been set.
      * @return True if the 'summaryformat' field has been set, false otherwise.
      */
    public boolean hasSummaryformat() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'summaryformat' field.
      * @return This builder.
      */
    public Value.Builder clearSummaryformat() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'format' field.
      * @return The value.
      */
    public java.lang.CharSequence getFormat() {
      return format;
    }

    /**
      * Sets the value of the 'format' field.
      * @param value The value of 'format'.
      * @return This builder.
      */
    public Value.Builder setFormat(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.format = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'format' field has been set.
      * @return True if the 'format' field has been set, false otherwise.
      */
    public boolean hasFormat() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'format' field.
      * @return This builder.
      */
    public Value.Builder clearFormat() {
      format = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'showgrades' field.
      * @return The value.
      */
    public java.lang.Integer getShowgrades() {
      return showgrades;
    }

    /**
      * Sets the value of the 'showgrades' field.
      * @param value The value of 'showgrades'.
      * @return This builder.
      */
    public Value.Builder setShowgrades(int value) {
      validate(fields()[9], value);
      this.showgrades = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'showgrades' field has been set.
      * @return True if the 'showgrades' field has been set, false otherwise.
      */
    public boolean hasShowgrades() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'showgrades' field.
      * @return This builder.
      */
    public Value.Builder clearShowgrades() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'newsitems' field.
      * @return The value.
      */
    public java.lang.Integer getNewsitems() {
      return newsitems;
    }

    /**
      * Sets the value of the 'newsitems' field.
      * @param value The value of 'newsitems'.
      * @return This builder.
      */
    public Value.Builder setNewsitems(int value) {
      validate(fields()[10], value);
      this.newsitems = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'newsitems' field has been set.
      * @return True if the 'newsitems' field has been set, false otherwise.
      */
    public boolean hasNewsitems() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'newsitems' field.
      * @return This builder.
      */
    public Value.Builder clearNewsitems() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'startdate' field.
      * @return The value.
      */
    public java.lang.Long getStartdate() {
      return startdate;
    }

    /**
      * Sets the value of the 'startdate' field.
      * @param value The value of 'startdate'.
      * @return This builder.
      */
    public Value.Builder setStartdate(long value) {
      validate(fields()[11], value);
      this.startdate = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'startdate' field has been set.
      * @return True if the 'startdate' field has been set, false otherwise.
      */
    public boolean hasStartdate() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'startdate' field.
      * @return This builder.
      */
    public Value.Builder clearStartdate() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'marker' field.
      * @return The value.
      */
    public java.lang.Long getMarker() {
      return marker;
    }

    /**
      * Sets the value of the 'marker' field.
      * @param value The value of 'marker'.
      * @return This builder.
      */
    public Value.Builder setMarker(long value) {
      validate(fields()[12], value);
      this.marker = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'marker' field has been set.
      * @return True if the 'marker' field has been set, false otherwise.
      */
    public boolean hasMarker() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'marker' field.
      * @return This builder.
      */
    public Value.Builder clearMarker() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxbytes' field.
      * @return The value.
      */
    public java.lang.Long getMaxbytes() {
      return maxbytes;
    }

    /**
      * Sets the value of the 'maxbytes' field.
      * @param value The value of 'maxbytes'.
      * @return This builder.
      */
    public Value.Builder setMaxbytes(long value) {
      validate(fields()[13], value);
      this.maxbytes = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'maxbytes' field has been set.
      * @return True if the 'maxbytes' field has been set, false otherwise.
      */
    public boolean hasMaxbytes() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'maxbytes' field.
      * @return This builder.
      */
    public Value.Builder clearMaxbytes() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'legacyfiles' field.
      * @return The value.
      */
    public java.lang.Integer getLegacyfiles() {
      return legacyfiles;
    }

    /**
      * Sets the value of the 'legacyfiles' field.
      * @param value The value of 'legacyfiles'.
      * @return This builder.
      */
    public Value.Builder setLegacyfiles(int value) {
      validate(fields()[14], value);
      this.legacyfiles = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'legacyfiles' field has been set.
      * @return True if the 'legacyfiles' field has been set, false otherwise.
      */
    public boolean hasLegacyfiles() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'legacyfiles' field.
      * @return This builder.
      */
    public Value.Builder clearLegacyfiles() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'showreports' field.
      * @return The value.
      */
    public java.lang.Integer getShowreports() {
      return showreports;
    }

    /**
      * Sets the value of the 'showreports' field.
      * @param value The value of 'showreports'.
      * @return This builder.
      */
    public Value.Builder setShowreports(int value) {
      validate(fields()[15], value);
      this.showreports = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'showreports' field has been set.
      * @return True if the 'showreports' field has been set, false otherwise.
      */
    public boolean hasShowreports() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'showreports' field.
      * @return This builder.
      */
    public Value.Builder clearShowreports() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'visible' field.
      * @return The value.
      */
    public java.lang.Integer getVisible() {
      return visible;
    }

    /**
      * Sets the value of the 'visible' field.
      * @param value The value of 'visible'.
      * @return This builder.
      */
    public Value.Builder setVisible(int value) {
      validate(fields()[16], value);
      this.visible = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'visible' field has been set.
      * @return True if the 'visible' field has been set, false otherwise.
      */
    public boolean hasVisible() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'visible' field.
      * @return This builder.
      */
    public Value.Builder clearVisible() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'visibleold' field.
      * @return The value.
      */
    public java.lang.Integer getVisibleold() {
      return visibleold;
    }

    /**
      * Sets the value of the 'visibleold' field.
      * @param value The value of 'visibleold'.
      * @return This builder.
      */
    public Value.Builder setVisibleold(int value) {
      validate(fields()[17], value);
      this.visibleold = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'visibleold' field has been set.
      * @return True if the 'visibleold' field has been set, false otherwise.
      */
    public boolean hasVisibleold() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'visibleold' field.
      * @return This builder.
      */
    public Value.Builder clearVisibleold() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'groupmode' field.
      * @return The value.
      */
    public java.lang.Integer getGroupmode() {
      return groupmode;
    }

    /**
      * Sets the value of the 'groupmode' field.
      * @param value The value of 'groupmode'.
      * @return This builder.
      */
    public Value.Builder setGroupmode(int value) {
      validate(fields()[18], value);
      this.groupmode = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'groupmode' field has been set.
      * @return True if the 'groupmode' field has been set, false otherwise.
      */
    public boolean hasGroupmode() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'groupmode' field.
      * @return This builder.
      */
    public Value.Builder clearGroupmode() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'groupmodeforce' field.
      * @return The value.
      */
    public java.lang.Integer getGroupmodeforce() {
      return groupmodeforce;
    }

    /**
      * Sets the value of the 'groupmodeforce' field.
      * @param value The value of 'groupmodeforce'.
      * @return This builder.
      */
    public Value.Builder setGroupmodeforce(int value) {
      validate(fields()[19], value);
      this.groupmodeforce = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'groupmodeforce' field has been set.
      * @return True if the 'groupmodeforce' field has been set, false otherwise.
      */
    public boolean hasGroupmodeforce() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'groupmodeforce' field.
      * @return This builder.
      */
    public Value.Builder clearGroupmodeforce() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'defaultgroupingid' field.
      * @return The value.
      */
    public java.lang.Long getDefaultgroupingid() {
      return defaultgroupingid;
    }

    /**
      * Sets the value of the 'defaultgroupingid' field.
      * @param value The value of 'defaultgroupingid'.
      * @return This builder.
      */
    public Value.Builder setDefaultgroupingid(long value) {
      validate(fields()[20], value);
      this.defaultgroupingid = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'defaultgroupingid' field has been set.
      * @return True if the 'defaultgroupingid' field has been set, false otherwise.
      */
    public boolean hasDefaultgroupingid() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'defaultgroupingid' field.
      * @return This builder.
      */
    public Value.Builder clearDefaultgroupingid() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'lang' field.
      * @return The value.
      */
    public java.lang.CharSequence getLang() {
      return lang;
    }

    /**
      * Sets the value of the 'lang' field.
      * @param value The value of 'lang'.
      * @return This builder.
      */
    public Value.Builder setLang(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.lang = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'lang' field has been set.
      * @return True if the 'lang' field has been set, false otherwise.
      */
    public boolean hasLang() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'lang' field.
      * @return This builder.
      */
    public Value.Builder clearLang() {
      lang = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'calendartype' field.
      * @return The value.
      */
    public java.lang.CharSequence getCalendartype() {
      return calendartype;
    }

    /**
      * Sets the value of the 'calendartype' field.
      * @param value The value of 'calendartype'.
      * @return This builder.
      */
    public Value.Builder setCalendartype(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.calendartype = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'calendartype' field has been set.
      * @return True if the 'calendartype' field has been set, false otherwise.
      */
    public boolean hasCalendartype() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'calendartype' field.
      * @return This builder.
      */
    public Value.Builder clearCalendartype() {
      calendartype = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'theme' field.
      * @return The value.
      */
    public java.lang.CharSequence getTheme() {
      return theme;
    }

    /**
      * Sets the value of the 'theme' field.
      * @param value The value of 'theme'.
      * @return This builder.
      */
    public Value.Builder setTheme(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.theme = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'theme' field has been set.
      * @return True if the 'theme' field has been set, false otherwise.
      */
    public boolean hasTheme() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'theme' field.
      * @return This builder.
      */
    public Value.Builder clearTheme() {
      theme = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'timecreated' field.
      * @return The value.
      */
    public java.lang.Long getTimecreated() {
      return timecreated;
    }

    /**
      * Sets the value of the 'timecreated' field.
      * @param value The value of 'timecreated'.
      * @return This builder.
      */
    public Value.Builder setTimecreated(long value) {
      validate(fields()[24], value);
      this.timecreated = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'timecreated' field has been set.
      * @return True if the 'timecreated' field has been set, false otherwise.
      */
    public boolean hasTimecreated() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'timecreated' field.
      * @return This builder.
      */
    public Value.Builder clearTimecreated() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'timemodified' field.
      * @return The value.
      */
    public java.lang.Long getTimemodified() {
      return timemodified;
    }

    /**
      * Sets the value of the 'timemodified' field.
      * @param value The value of 'timemodified'.
      * @return This builder.
      */
    public Value.Builder setTimemodified(long value) {
      validate(fields()[25], value);
      this.timemodified = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'timemodified' field has been set.
      * @return True if the 'timemodified' field has been set, false otherwise.
      */
    public boolean hasTimemodified() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'timemodified' field.
      * @return This builder.
      */
    public Value.Builder clearTimemodified() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'requested' field.
      * @return The value.
      */
    public java.lang.Integer getRequested() {
      return requested;
    }

    /**
      * Sets the value of the 'requested' field.
      * @param value The value of 'requested'.
      * @return This builder.
      */
    public Value.Builder setRequested(int value) {
      validate(fields()[26], value);
      this.requested = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'requested' field has been set.
      * @return True if the 'requested' field has been set, false otherwise.
      */
    public boolean hasRequested() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'requested' field.
      * @return This builder.
      */
    public Value.Builder clearRequested() {
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'enablecompletion' field.
      * @return The value.
      */
    public java.lang.Integer getEnablecompletion() {
      return enablecompletion;
    }

    /**
      * Sets the value of the 'enablecompletion' field.
      * @param value The value of 'enablecompletion'.
      * @return This builder.
      */
    public Value.Builder setEnablecompletion(int value) {
      validate(fields()[27], value);
      this.enablecompletion = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'enablecompletion' field has been set.
      * @return True if the 'enablecompletion' field has been set, false otherwise.
      */
    public boolean hasEnablecompletion() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'enablecompletion' field.
      * @return This builder.
      */
    public Value.Builder clearEnablecompletion() {
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'completionnotify' field.
      * @return The value.
      */
    public java.lang.Integer getCompletionnotify() {
      return completionnotify;
    }

    /**
      * Sets the value of the 'completionnotify' field.
      * @param value The value of 'completionnotify'.
      * @return This builder.
      */
    public Value.Builder setCompletionnotify(int value) {
      validate(fields()[28], value);
      this.completionnotify = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'completionnotify' field has been set.
      * @return True if the 'completionnotify' field has been set, false otherwise.
      */
    public boolean hasCompletionnotify() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'completionnotify' field.
      * @return This builder.
      */
    public Value.Builder clearCompletionnotify() {
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'cacherev' field.
      * @return The value.
      */
    public java.lang.Long getCacherev() {
      return cacherev;
    }

    /**
      * Sets the value of the 'cacherev' field.
      * @param value The value of 'cacherev'.
      * @return This builder.
      */
    public Value.Builder setCacherev(long value) {
      validate(fields()[29], value);
      this.cacherev = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'cacherev' field has been set.
      * @return True if the 'cacherev' field has been set, false otherwise.
      */
    public boolean hasCacherev() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'cacherev' field.
      * @return This builder.
      */
    public Value.Builder clearCacherev() {
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'enddate' field.
      * @return The value.
      */
    public java.lang.Long getEnddate() {
      return enddate;
    }

    /**
      * Sets the value of the 'enddate' field.
      * @param value The value of 'enddate'.
      * @return This builder.
      */
    public Value.Builder setEnddate(long value) {
      validate(fields()[30], value);
      this.enddate = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'enddate' field has been set.
      * @return True if the 'enddate' field has been set, false otherwise.
      */
    public boolean hasEnddate() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'enddate' field.
      * @return This builder.
      */
    public Value.Builder clearEnddate() {
      fieldSetFlags()[30] = false;
      return this;
    }

    @Override
    public Value build() {
      try {
        Value record = new Value();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.category = fieldSetFlags()[1] ? this.category : (java.lang.Long) defaultValue(fields()[1]);
        record.sortorder = fieldSetFlags()[2] ? this.sortorder : (java.lang.Long) defaultValue(fields()[2]);
        record.fullname = fieldSetFlags()[3] ? this.fullname : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.shortname = fieldSetFlags()[4] ? this.shortname : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.idnumber = fieldSetFlags()[5] ? this.idnumber : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.summary = fieldSetFlags()[6] ? this.summary : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.summaryformat = fieldSetFlags()[7] ? this.summaryformat : (java.lang.Integer) defaultValue(fields()[7]);
        record.format = fieldSetFlags()[8] ? this.format : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.showgrades = fieldSetFlags()[9] ? this.showgrades : (java.lang.Integer) defaultValue(fields()[9]);
        record.newsitems = fieldSetFlags()[10] ? this.newsitems : (java.lang.Integer) defaultValue(fields()[10]);
        record.startdate = fieldSetFlags()[11] ? this.startdate : (java.lang.Long) defaultValue(fields()[11]);
        record.marker = fieldSetFlags()[12] ? this.marker : (java.lang.Long) defaultValue(fields()[12]);
        record.maxbytes = fieldSetFlags()[13] ? this.maxbytes : (java.lang.Long) defaultValue(fields()[13]);
        record.legacyfiles = fieldSetFlags()[14] ? this.legacyfiles : (java.lang.Integer) defaultValue(fields()[14]);
        record.showreports = fieldSetFlags()[15] ? this.showreports : (java.lang.Integer) defaultValue(fields()[15]);
        record.visible = fieldSetFlags()[16] ? this.visible : (java.lang.Integer) defaultValue(fields()[16]);
        record.visibleold = fieldSetFlags()[17] ? this.visibleold : (java.lang.Integer) defaultValue(fields()[17]);
        record.groupmode = fieldSetFlags()[18] ? this.groupmode : (java.lang.Integer) defaultValue(fields()[18]);
        record.groupmodeforce = fieldSetFlags()[19] ? this.groupmodeforce : (java.lang.Integer) defaultValue(fields()[19]);
        record.defaultgroupingid = fieldSetFlags()[20] ? this.defaultgroupingid : (java.lang.Long) defaultValue(fields()[20]);
        record.lang = fieldSetFlags()[21] ? this.lang : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.calendartype = fieldSetFlags()[22] ? this.calendartype : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.theme = fieldSetFlags()[23] ? this.theme : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.timecreated = fieldSetFlags()[24] ? this.timecreated : (java.lang.Long) defaultValue(fields()[24]);
        record.timemodified = fieldSetFlags()[25] ? this.timemodified : (java.lang.Long) defaultValue(fields()[25]);
        record.requested = fieldSetFlags()[26] ? this.requested : (java.lang.Integer) defaultValue(fields()[26]);
        record.enablecompletion = fieldSetFlags()[27] ? this.enablecompletion : (java.lang.Integer) defaultValue(fields()[27]);
        record.completionnotify = fieldSetFlags()[28] ? this.completionnotify : (java.lang.Integer) defaultValue(fields()[28]);
        record.cacherev = fieldSetFlags()[29] ? this.cacherev : (java.lang.Long) defaultValue(fields()[29]);
        record.enddate = fieldSetFlags()[30] ? this.enddate : (java.lang.Long) defaultValue(fields()[30]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
