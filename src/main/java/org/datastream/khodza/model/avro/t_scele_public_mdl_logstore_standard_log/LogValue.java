/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LogValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5243286362596475438L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LogValue\",\"namespace\":\"org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"eventname\",\"type\":\"string\"},{\"name\":\"component\",\"type\":\"string\"},{\"name\":\"action\",\"type\":\"string\"},{\"name\":\"target\",\"type\":\"string\"},{\"name\":\"objecttable\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"objectid\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"crud\",\"type\":\"string\"},{\"name\":\"edulevel\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"contextid\",\"type\":\"long\"},{\"name\":\"contextlevel\",\"type\":\"long\"},{\"name\":\"contextinstanceid\",\"type\":\"long\"},{\"name\":\"userid\",\"type\":\"long\"},{\"name\":\"courseid\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"relateduserid\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"anonymous\",\"type\":{\"type\":\"int\",\"connect.type\":\"int16\"}},{\"name\":\"other\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"timecreated\",\"type\":\"long\"},{\"name\":\"origin\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ip\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"realuserid\",\"type\":[\"null\",\"long\"],\"default\":null}],\"connect.name\":\"t_scele.public.mdl_logstore_standard_log.LogValue\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long id;
  @Deprecated public java.lang.CharSequence eventname;
  @Deprecated public java.lang.CharSequence component;
  @Deprecated public java.lang.CharSequence action;
  @Deprecated public java.lang.CharSequence target;
  @Deprecated public java.lang.CharSequence objecttable;
  @Deprecated public java.lang.Long objectid;
  @Deprecated public java.lang.CharSequence crud;
  @Deprecated public int edulevel;
  @Deprecated public long contextid;
  @Deprecated public long contextlevel;
  @Deprecated public long contextinstanceid;
  @Deprecated public long userid;
  @Deprecated public java.lang.Long courseid;
  @Deprecated public java.lang.Long relateduserid;
  @Deprecated public int anonymous;
  @Deprecated public java.lang.CharSequence other;
  @Deprecated public long timecreated;
  @Deprecated public java.lang.CharSequence origin;
  @Deprecated public java.lang.CharSequence ip;
  @Deprecated public java.lang.Long realuserid;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LogValue() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param eventname The new value for eventname
   * @param component The new value for component
   * @param action The new value for action
   * @param target The new value for target
   * @param objecttable The new value for objecttable
   * @param objectid The new value for objectid
   * @param crud The new value for crud
   * @param edulevel The new value for edulevel
   * @param contextid The new value for contextid
   * @param contextlevel The new value for contextlevel
   * @param contextinstanceid The new value for contextinstanceid
   * @param userid The new value for userid
   * @param courseid The new value for courseid
   * @param relateduserid The new value for relateduserid
   * @param anonymous The new value for anonymous
   * @param other The new value for other
   * @param timecreated The new value for timecreated
   * @param origin The new value for origin
   * @param ip The new value for ip
   * @param realuserid The new value for realuserid
   */
  public LogValue(java.lang.Long id, java.lang.CharSequence eventname, java.lang.CharSequence component, java.lang.CharSequence action, java.lang.CharSequence target, java.lang.CharSequence objecttable, java.lang.Long objectid, java.lang.CharSequence crud, java.lang.Integer edulevel, java.lang.Long contextid, java.lang.Long contextlevel, java.lang.Long contextinstanceid, java.lang.Long userid, java.lang.Long courseid, java.lang.Long relateduserid, java.lang.Integer anonymous, java.lang.CharSequence other, java.lang.Long timecreated, java.lang.CharSequence origin, java.lang.CharSequence ip, java.lang.Long realuserid) {
    this.id = id;
    this.eventname = eventname;
    this.component = component;
    this.action = action;
    this.target = target;
    this.objecttable = objecttable;
    this.objectid = objectid;
    this.crud = crud;
    this.edulevel = edulevel;
    this.contextid = contextid;
    this.contextlevel = contextlevel;
    this.contextinstanceid = contextinstanceid;
    this.userid = userid;
    this.courseid = courseid;
    this.relateduserid = relateduserid;
    this.anonymous = anonymous;
    this.other = other;
    this.timecreated = timecreated;
    this.origin = origin;
    this.ip = ip;
    this.realuserid = realuserid;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0: return id;
      case 1: return eventname;
      case 2: return component;
      case 3: return action;
      case 4: return target;
      case 5: return objecttable;
      case 6: return objectid;
      case 7: return crud;
      case 8: return edulevel;
      case 9: return contextid;
      case 10: return contextlevel;
      case 11: return contextinstanceid;
      case 12: return userid;
      case 13: return courseid;
      case 14: return relateduserid;
      case 15: return anonymous;
      case 16: return other;
      case 17: return timecreated;
      case 18: return origin;
      case 19: return ip;
      case 20: return realuserid;
      default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0: id = (java.lang.Long)value$; break;
      case 1: eventname = (java.lang.CharSequence)value$; break;
      case 2: component = (java.lang.CharSequence)value$; break;
      case 3: action = (java.lang.CharSequence)value$; break;
      case 4: target = (java.lang.CharSequence)value$; break;
      case 5: objecttable = (java.lang.CharSequence)value$; break;
      case 6: objectid = (java.lang.Long)value$; break;
      case 7: crud = (java.lang.CharSequence)value$; break;
      case 8: edulevel = (java.lang.Integer)value$; break;
      case 9: contextid = (java.lang.Long)value$; break;
      case 10: contextlevel = (java.lang.Long)value$; break;
      case 11: contextinstanceid = (java.lang.Long)value$; break;
      case 12: userid = (java.lang.Long)value$; break;
      case 13: courseid = (java.lang.Long)value$; break;
      case 14: relateduserid = (java.lang.Long)value$; break;
      case 15: anonymous = (java.lang.Integer)value$; break;
      case 16: other = (java.lang.CharSequence)value$; break;
      case 17: timecreated = (java.lang.Long)value$; break;
      case 18: origin = (java.lang.CharSequence)value$; break;
      case 19: ip = (java.lang.CharSequence)value$; break;
      case 20: realuserid = (java.lang.Long)value$; break;
      default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'eventname' field.
   * @return The value of the 'eventname' field.
   */
  public java.lang.CharSequence getEventname() {
    return eventname;
  }

  /**
   * Sets the value of the 'eventname' field.
   * @param value the value to set.
   */
  public void setEventname(java.lang.CharSequence value) {
    this.eventname = value;
  }

  /**
   * Gets the value of the 'component' field.
   * @return The value of the 'component' field.
   */
  public java.lang.CharSequence getComponent() {
    return component;
  }

  /**
   * Sets the value of the 'component' field.
   * @param value the value to set.
   */
  public void setComponent(java.lang.CharSequence value) {
    this.component = value;
  }

  /**
   * Gets the value of the 'action' field.
   * @return The value of the 'action' field.
   */
  public java.lang.CharSequence getAction() {
    return action;
  }

  /**
   * Sets the value of the 'action' field.
   * @param value the value to set.
   */
  public void setAction(java.lang.CharSequence value) {
    this.action = value;
  }

  /**
   * Gets the value of the 'target' field.
   * @return The value of the 'target' field.
   */
  public java.lang.CharSequence getTarget() {
    return target;
  }

  /**
   * Sets the value of the 'target' field.
   * @param value the value to set.
   */
  public void setTarget(java.lang.CharSequence value) {
    this.target = value;
  }

  /**
   * Gets the value of the 'objecttable' field.
   * @return The value of the 'objecttable' field.
   */
  public java.lang.CharSequence getObjecttable() {
    return objecttable;
  }

  /**
   * Sets the value of the 'objecttable' field.
   * @param value the value to set.
   */
  public void setObjecttable(java.lang.CharSequence value) {
    this.objecttable = value;
  }

  /**
   * Gets the value of the 'objectid' field.
   * @return The value of the 'objectid' field.
   */
  public java.lang.Long getObjectid() {
    return objectid;
  }

  /**
   * Sets the value of the 'objectid' field.
   * @param value the value to set.
   */
  public void setObjectid(java.lang.Long value) {
    this.objectid = value;
  }

  /**
   * Gets the value of the 'crud' field.
   * @return The value of the 'crud' field.
   */
  public java.lang.CharSequence getCrud() {
    return crud;
  }

  /**
   * Sets the value of the 'crud' field.
   * @param value the value to set.
   */
  public void setCrud(java.lang.CharSequence value) {
    this.crud = value;
  }

  /**
   * Gets the value of the 'edulevel' field.
   * @return The value of the 'edulevel' field.
   */
  public java.lang.Integer getEdulevel() {
    return edulevel;
  }

  /**
   * Sets the value of the 'edulevel' field.
   * @param value the value to set.
   */
  public void setEdulevel(java.lang.Integer value) {
    this.edulevel = value;
  }

  /**
   * Gets the value of the 'contextid' field.
   * @return The value of the 'contextid' field.
   */
  public java.lang.Long getContextid() {
    return contextid;
  }

  /**
   * Sets the value of the 'contextid' field.
   * @param value the value to set.
   */
  public void setContextid(java.lang.Long value) {
    this.contextid = value;
  }

  /**
   * Gets the value of the 'contextlevel' field.
   * @return The value of the 'contextlevel' field.
   */
  public java.lang.Long getContextlevel() {
    return contextlevel;
  }

  /**
   * Sets the value of the 'contextlevel' field.
   * @param value the value to set.
   */
  public void setContextlevel(java.lang.Long value) {
    this.contextlevel = value;
  }

  /**
   * Gets the value of the 'contextinstanceid' field.
   * @return The value of the 'contextinstanceid' field.
   */
  public java.lang.Long getContextinstanceid() {
    return contextinstanceid;
  }

  /**
   * Sets the value of the 'contextinstanceid' field.
   * @param value the value to set.
   */
  public void setContextinstanceid(java.lang.Long value) {
    this.contextinstanceid = value;
  }

  /**
   * Gets the value of the 'userid' field.
   * @return The value of the 'userid' field.
   */
  public java.lang.Long getUserid() {
    return userid;
  }

  /**
   * Sets the value of the 'userid' field.
   * @param value the value to set.
   */
  public void setUserid(java.lang.Long value) {
    this.userid = value;
  }

  /**
   * Gets the value of the 'courseid' field.
   * @return The value of the 'courseid' field.
   */
  public java.lang.Long getCourseid() {
    return courseid;
  }

  /**
   * Sets the value of the 'courseid' field.
   * @param value the value to set.
   */
  public void setCourseid(java.lang.Long value) {
    this.courseid = value;
  }

  /**
   * Gets the value of the 'relateduserid' field.
   * @return The value of the 'relateduserid' field.
   */
  public java.lang.Long getRelateduserid() {
    return relateduserid;
  }

  /**
   * Sets the value of the 'relateduserid' field.
   * @param value the value to set.
   */
  public void setRelateduserid(java.lang.Long value) {
    this.relateduserid = value;
  }

  /**
   * Gets the value of the 'anonymous' field.
   * @return The value of the 'anonymous' field.
   */
  public java.lang.Integer getAnonymous() {
    return anonymous;
  }

  /**
   * Sets the value of the 'anonymous' field.
   * @param value the value to set.
   */
  public void setAnonymous(java.lang.Integer value) {
    this.anonymous = value;
  }

  /**
   * Gets the value of the 'other' field.
   * @return The value of the 'other' field.
   */
  public java.lang.CharSequence getOther() {
    return other;
  }

  /**
   * Sets the value of the 'other' field.
   * @param value the value to set.
   */
  public void setOther(java.lang.CharSequence value) {
    this.other = value;
  }

  /**
   * Gets the value of the 'timecreated' field.
   * @return The value of the 'timecreated' field.
   */
  public java.lang.Long getTimecreated() {
    return timecreated;
  }

  /**
   * Sets the value of the 'timecreated' field.
   * @param value the value to set.
   */
  public void setTimecreated(java.lang.Long value) {
    this.timecreated = value;
  }

  /**
   * Gets the value of the 'origin' field.
   * @return The value of the 'origin' field.
   */
  public java.lang.CharSequence getOrigin() {
    return origin;
  }

  /**
   * Sets the value of the 'origin' field.
   * @param value the value to set.
   */
  public void setOrigin(java.lang.CharSequence value) {
    this.origin = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public java.lang.CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(java.lang.CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'realuserid' field.
   * @return The value of the 'realuserid' field.
   */
  public java.lang.Long getRealuserid() {
    return realuserid;
  }

  /**
   * Sets the value of the 'realuserid' field.
   * @param value the value to set.
   */
  public void setRealuserid(java.lang.Long value) {
    this.realuserid = value;
  }

  /**
   * Creates a new LogValue RecordBuilder.
   * @return A new LogValue RecordBuilder
   */
  public static org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder newBuilder() {
    return new org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder();
  }

  /**
   * Creates a new LogValue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LogValue RecordBuilder
   */
  public static org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder newBuilder(org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder other) {
    return new org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder(other);
  }

  /**
   * Creates a new LogValue RecordBuilder by copying an existing LogValue instance.
   * @param other The existing instance to copy.
   * @return A new LogValue RecordBuilder
   */
  public static org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder newBuilder(org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue other) {
    return new org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder(other);
  }

  /**
   * RecordBuilder for LogValue instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LogValue>
          implements org.apache.avro.data.RecordBuilder<LogValue> {

    private long id;
    private java.lang.CharSequence eventname;
    private java.lang.CharSequence component;
    private java.lang.CharSequence action;
    private java.lang.CharSequence target;
    private java.lang.CharSequence objecttable;
    private java.lang.Long objectid;
    private java.lang.CharSequence crud;
    private int edulevel;
    private long contextid;
    private long contextlevel;
    private long contextinstanceid;
    private long userid;
    private java.lang.Long courseid;
    private java.lang.Long relateduserid;
    private int anonymous;
    private java.lang.CharSequence other;
    private long timecreated;
    private java.lang.CharSequence origin;
    private java.lang.CharSequence ip;
    private java.lang.Long realuserid;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventname)) {
        this.eventname = data().deepCopy(fields()[1].schema(), other.eventname);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.component)) {
        this.component = data().deepCopy(fields()[2].schema(), other.component);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.action)) {
        this.action = data().deepCopy(fields()[3].schema(), other.action);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.target)) {
        this.target = data().deepCopy(fields()[4].schema(), other.target);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.objecttable)) {
        this.objecttable = data().deepCopy(fields()[5].schema(), other.objecttable);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.objectid)) {
        this.objectid = data().deepCopy(fields()[6].schema(), other.objectid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.crud)) {
        this.crud = data().deepCopy(fields()[7].schema(), other.crud);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.edulevel)) {
        this.edulevel = data().deepCopy(fields()[8].schema(), other.edulevel);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.contextid)) {
        this.contextid = data().deepCopy(fields()[9].schema(), other.contextid);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.contextlevel)) {
        this.contextlevel = data().deepCopy(fields()[10].schema(), other.contextlevel);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.contextinstanceid)) {
        this.contextinstanceid = data().deepCopy(fields()[11].schema(), other.contextinstanceid);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.userid)) {
        this.userid = data().deepCopy(fields()[12].schema(), other.userid);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.courseid)) {
        this.courseid = data().deepCopy(fields()[13].schema(), other.courseid);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.relateduserid)) {
        this.relateduserid = data().deepCopy(fields()[14].schema(), other.relateduserid);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.anonymous)) {
        this.anonymous = data().deepCopy(fields()[15].schema(), other.anonymous);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.other)) {
        this.other = data().deepCopy(fields()[16].schema(), other.other);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.timecreated)) {
        this.timecreated = data().deepCopy(fields()[17].schema(), other.timecreated);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.origin)) {
        this.origin = data().deepCopy(fields()[18].schema(), other.origin);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.ip)) {
        this.ip = data().deepCopy(fields()[19].schema(), other.ip);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.realuserid)) {
        this.realuserid = data().deepCopy(fields()[20].schema(), other.realuserid);
        fieldSetFlags()[20] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing LogValue instance
     * @param other The existing instance to copy.
     */
    private Builder(org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventname)) {
        this.eventname = data().deepCopy(fields()[1].schema(), other.eventname);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.component)) {
        this.component = data().deepCopy(fields()[2].schema(), other.component);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.action)) {
        this.action = data().deepCopy(fields()[3].schema(), other.action);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.target)) {
        this.target = data().deepCopy(fields()[4].schema(), other.target);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.objecttable)) {
        this.objecttable = data().deepCopy(fields()[5].schema(), other.objecttable);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.objectid)) {
        this.objectid = data().deepCopy(fields()[6].schema(), other.objectid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.crud)) {
        this.crud = data().deepCopy(fields()[7].schema(), other.crud);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.edulevel)) {
        this.edulevel = data().deepCopy(fields()[8].schema(), other.edulevel);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.contextid)) {
        this.contextid = data().deepCopy(fields()[9].schema(), other.contextid);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.contextlevel)) {
        this.contextlevel = data().deepCopy(fields()[10].schema(), other.contextlevel);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.contextinstanceid)) {
        this.contextinstanceid = data().deepCopy(fields()[11].schema(), other.contextinstanceid);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.userid)) {
        this.userid = data().deepCopy(fields()[12].schema(), other.userid);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.courseid)) {
        this.courseid = data().deepCopy(fields()[13].schema(), other.courseid);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.relateduserid)) {
        this.relateduserid = data().deepCopy(fields()[14].schema(), other.relateduserid);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.anonymous)) {
        this.anonymous = data().deepCopy(fields()[15].schema(), other.anonymous);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.other)) {
        this.other = data().deepCopy(fields()[16].schema(), other.other);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.timecreated)) {
        this.timecreated = data().deepCopy(fields()[17].schema(), other.timecreated);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.origin)) {
        this.origin = data().deepCopy(fields()[18].schema(), other.origin);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.ip)) {
        this.ip = data().deepCopy(fields()[19].schema(), other.ip);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.realuserid)) {
        this.realuserid = data().deepCopy(fields()[20].schema(), other.realuserid);
        fieldSetFlags()[20] = true;
      }
    }

    /**
     * Gets the value of the 'id' field.
     * @return The value.
     */
    public java.lang.Long getId() {
      return id;
    }

    /**
     * Sets the value of the 'id' field.
     * @param value The value of 'id'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'id' field has been set.
     * @return True if the 'id' field has been set, false otherwise.
     */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
     * Clears the value of the 'id' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'eventname' field.
     * @return The value.
     */
    public java.lang.CharSequence getEventname() {
      return eventname;
    }

    /**
     * Sets the value of the 'eventname' field.
     * @param value The value of 'eventname'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setEventname(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.eventname = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'eventname' field has been set.
     * @return True if the 'eventname' field has been set, false otherwise.
     */
    public boolean hasEventname() {
      return fieldSetFlags()[1];
    }


    /**
     * Clears the value of the 'eventname' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearEventname() {
      eventname = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'component' field.
     * @return The value.
     */
    public java.lang.CharSequence getComponent() {
      return component;
    }

    /**
     * Sets the value of the 'component' field.
     * @param value The value of 'component'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setComponent(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.component = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'component' field has been set.
     * @return True if the 'component' field has been set, false otherwise.
     */
    public boolean hasComponent() {
      return fieldSetFlags()[2];
    }


    /**
     * Clears the value of the 'component' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearComponent() {
      component = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
     * Gets the value of the 'action' field.
     * @return The value.
     */
    public java.lang.CharSequence getAction() {
      return action;
    }

    /**
     * Sets the value of the 'action' field.
     * @param value The value of 'action'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setAction(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.action = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
     * Checks whether the 'action' field has been set.
     * @return True if the 'action' field has been set, false otherwise.
     */
    public boolean hasAction() {
      return fieldSetFlags()[3];
    }


    /**
     * Clears the value of the 'action' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearAction() {
      action = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
     * Gets the value of the 'target' field.
     * @return The value.
     */
    public java.lang.CharSequence getTarget() {
      return target;
    }

    /**
     * Sets the value of the 'target' field.
     * @param value The value of 'target'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setTarget(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.target = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
     * Checks whether the 'target' field has been set.
     * @return True if the 'target' field has been set, false otherwise.
     */
    public boolean hasTarget() {
      return fieldSetFlags()[4];
    }


    /**
     * Clears the value of the 'target' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearTarget() {
      target = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
     * Gets the value of the 'objecttable' field.
     * @return The value.
     */
    public java.lang.CharSequence getObjecttable() {
      return objecttable;
    }

    /**
     * Sets the value of the 'objecttable' field.
     * @param value The value of 'objecttable'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setObjecttable(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.objecttable = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
     * Checks whether the 'objecttable' field has been set.
     * @return True if the 'objecttable' field has been set, false otherwise.
     */
    public boolean hasObjecttable() {
      return fieldSetFlags()[5];
    }


    /**
     * Clears the value of the 'objecttable' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearObjecttable() {
      objecttable = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
     * Gets the value of the 'objectid' field.
     * @return The value.
     */
    public java.lang.Long getObjectid() {
      return objectid;
    }

    /**
     * Sets the value of the 'objectid' field.
     * @param value The value of 'objectid'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setObjectid(java.lang.Long value) {
      validate(fields()[6], value);
      this.objectid = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
     * Checks whether the 'objectid' field has been set.
     * @return True if the 'objectid' field has been set, false otherwise.
     */
    public boolean hasObjectid() {
      return fieldSetFlags()[6];
    }


    /**
     * Clears the value of the 'objectid' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearObjectid() {
      objectid = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
     * Gets the value of the 'crud' field.
     * @return The value.
     */
    public java.lang.CharSequence getCrud() {
      return crud;
    }

    /**
     * Sets the value of the 'crud' field.
     * @param value The value of 'crud'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setCrud(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.crud = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
     * Checks whether the 'crud' field has been set.
     * @return True if the 'crud' field has been set, false otherwise.
     */
    public boolean hasCrud() {
      return fieldSetFlags()[7];
    }


    /**
     * Clears the value of the 'crud' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearCrud() {
      crud = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
     * Gets the value of the 'edulevel' field.
     * @return The value.
     */
    public java.lang.Integer getEdulevel() {
      return edulevel;
    }

    /**
     * Sets the value of the 'edulevel' field.
     * @param value The value of 'edulevel'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setEdulevel(int value) {
      validate(fields()[8], value);
      this.edulevel = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
     * Checks whether the 'edulevel' field has been set.
     * @return True if the 'edulevel' field has been set, false otherwise.
     */
    public boolean hasEdulevel() {
      return fieldSetFlags()[8];
    }


    /**
     * Clears the value of the 'edulevel' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearEdulevel() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
     * Gets the value of the 'contextid' field.
     * @return The value.
     */
    public java.lang.Long getContextid() {
      return contextid;
    }

    /**
     * Sets the value of the 'contextid' field.
     * @param value The value of 'contextid'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setContextid(long value) {
      validate(fields()[9], value);
      this.contextid = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
     * Checks whether the 'contextid' field has been set.
     * @return True if the 'contextid' field has been set, false otherwise.
     */
    public boolean hasContextid() {
      return fieldSetFlags()[9];
    }


    /**
     * Clears the value of the 'contextid' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearContextid() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
     * Gets the value of the 'contextlevel' field.
     * @return The value.
     */
    public java.lang.Long getContextlevel() {
      return contextlevel;
    }

    /**
     * Sets the value of the 'contextlevel' field.
     * @param value The value of 'contextlevel'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setContextlevel(long value) {
      validate(fields()[10], value);
      this.contextlevel = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
     * Checks whether the 'contextlevel' field has been set.
     * @return True if the 'contextlevel' field has been set, false otherwise.
     */
    public boolean hasContextlevel() {
      return fieldSetFlags()[10];
    }


    /**
     * Clears the value of the 'contextlevel' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearContextlevel() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
     * Gets the value of the 'contextinstanceid' field.
     * @return The value.
     */
    public java.lang.Long getContextinstanceid() {
      return contextinstanceid;
    }

    /**
     * Sets the value of the 'contextinstanceid' field.
     * @param value The value of 'contextinstanceid'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setContextinstanceid(long value) {
      validate(fields()[11], value);
      this.contextinstanceid = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
     * Checks whether the 'contextinstanceid' field has been set.
     * @return True if the 'contextinstanceid' field has been set, false otherwise.
     */
    public boolean hasContextinstanceid() {
      return fieldSetFlags()[11];
    }


    /**
     * Clears the value of the 'contextinstanceid' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearContextinstanceid() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
     * Gets the value of the 'userid' field.
     * @return The value.
     */
    public java.lang.Long getUserid() {
      return userid;
    }

    /**
     * Sets the value of the 'userid' field.
     * @param value The value of 'userid'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setUserid(long value) {
      validate(fields()[12], value);
      this.userid = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
     * Checks whether the 'userid' field has been set.
     * @return True if the 'userid' field has been set, false otherwise.
     */
    public boolean hasUserid() {
      return fieldSetFlags()[12];
    }


    /**
     * Clears the value of the 'userid' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearUserid() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
     * Gets the value of the 'courseid' field.
     * @return The value.
     */
    public java.lang.Long getCourseid() {
      return courseid;
    }

    /**
     * Sets the value of the 'courseid' field.
     * @param value The value of 'courseid'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setCourseid(java.lang.Long value) {
      validate(fields()[13], value);
      this.courseid = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
     * Checks whether the 'courseid' field has been set.
     * @return True if the 'courseid' field has been set, false otherwise.
     */
    public boolean hasCourseid() {
      return fieldSetFlags()[13];
    }


    /**
     * Clears the value of the 'courseid' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearCourseid() {
      courseid = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
     * Gets the value of the 'relateduserid' field.
     * @return The value.
     */
    public java.lang.Long getRelateduserid() {
      return relateduserid;
    }

    /**
     * Sets the value of the 'relateduserid' field.
     * @param value The value of 'relateduserid'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setRelateduserid(java.lang.Long value) {
      validate(fields()[14], value);
      this.relateduserid = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
     * Checks whether the 'relateduserid' field has been set.
     * @return True if the 'relateduserid' field has been set, false otherwise.
     */
    public boolean hasRelateduserid() {
      return fieldSetFlags()[14];
    }


    /**
     * Clears the value of the 'relateduserid' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearRelateduserid() {
      relateduserid = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
     * Gets the value of the 'anonymous' field.
     * @return The value.
     */
    public java.lang.Integer getAnonymous() {
      return anonymous;
    }

    /**
     * Sets the value of the 'anonymous' field.
     * @param value The value of 'anonymous'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setAnonymous(int value) {
      validate(fields()[15], value);
      this.anonymous = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
     * Checks whether the 'anonymous' field has been set.
     * @return True if the 'anonymous' field has been set, false otherwise.
     */
    public boolean hasAnonymous() {
      return fieldSetFlags()[15];
    }


    /**
     * Clears the value of the 'anonymous' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearAnonymous() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
     * Gets the value of the 'other' field.
     * @return The value.
     */
    public java.lang.CharSequence getOther() {
      return other;
    }

    /**
     * Sets the value of the 'other' field.
     * @param value The value of 'other'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setOther(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.other = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
     * Checks whether the 'other' field has been set.
     * @return True if the 'other' field has been set, false otherwise.
     */
    public boolean hasOther() {
      return fieldSetFlags()[16];
    }


    /**
     * Clears the value of the 'other' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearOther() {
      other = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
     * Gets the value of the 'timecreated' field.
     * @return The value.
     */
    public java.lang.Long getTimecreated() {
      return timecreated;
    }

    /**
     * Sets the value of the 'timecreated' field.
     * @param value The value of 'timecreated'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setTimecreated(long value) {
      validate(fields()[17], value);
      this.timecreated = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
     * Checks whether the 'timecreated' field has been set.
     * @return True if the 'timecreated' field has been set, false otherwise.
     */
    public boolean hasTimecreated() {
      return fieldSetFlags()[17];
    }


    /**
     * Clears the value of the 'timecreated' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearTimecreated() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
     * Gets the value of the 'origin' field.
     * @return The value.
     */
    public java.lang.CharSequence getOrigin() {
      return origin;
    }

    /**
     * Sets the value of the 'origin' field.
     * @param value The value of 'origin'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setOrigin(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.origin = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
     * Checks whether the 'origin' field has been set.
     * @return True if the 'origin' field has been set, false otherwise.
     */
    public boolean hasOrigin() {
      return fieldSetFlags()[18];
    }


    /**
     * Clears the value of the 'origin' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearOrigin() {
      origin = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
     * Gets the value of the 'ip' field.
     * @return The value.
     */
    public java.lang.CharSequence getIp() {
      return ip;
    }

    /**
     * Sets the value of the 'ip' field.
     * @param value The value of 'ip'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setIp(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.ip = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
     * Checks whether the 'ip' field has been set.
     * @return True if the 'ip' field has been set, false otherwise.
     */
    public boolean hasIp() {
      return fieldSetFlags()[19];
    }


    /**
     * Clears the value of the 'ip' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearIp() {
      ip = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
     * Gets the value of the 'realuserid' field.
     * @return The value.
     */
    public java.lang.Long getRealuserid() {
      return realuserid;
    }

    /**
     * Sets the value of the 'realuserid' field.
     * @param value The value of 'realuserid'.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder setRealuserid(java.lang.Long value) {
      validate(fields()[20], value);
      this.realuserid = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
     * Checks whether the 'realuserid' field has been set.
     * @return True if the 'realuserid' field has been set, false otherwise.
     */
    public boolean hasRealuserid() {
      return fieldSetFlags()[20];
    }


    /**
     * Clears the value of the 'realuserid' field.
     * @return This builder.
     */
    public org.datastream.khodza.model.avro.t_scele_public_mdl_logstore_standard_log.LogValue.Builder clearRealuserid() {
      realuserid = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    public LogValue build() {
      try {
        LogValue record = new LogValue();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.eventname = fieldSetFlags()[1] ? this.eventname : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.component = fieldSetFlags()[2] ? this.component : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.action = fieldSetFlags()[3] ? this.action : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.target = fieldSetFlags()[4] ? this.target : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.objecttable = fieldSetFlags()[5] ? this.objecttable : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.objectid = fieldSetFlags()[6] ? this.objectid : (java.lang.Long) defaultValue(fields()[6]);
        record.crud = fieldSetFlags()[7] ? this.crud : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.edulevel = fieldSetFlags()[8] ? this.edulevel : (java.lang.Integer) defaultValue(fields()[8]);
        record.contextid = fieldSetFlags()[9] ? this.contextid : (java.lang.Long) defaultValue(fields()[9]);
        record.contextlevel = fieldSetFlags()[10] ? this.contextlevel : (java.lang.Long) defaultValue(fields()[10]);
        record.contextinstanceid = fieldSetFlags()[11] ? this.contextinstanceid : (java.lang.Long) defaultValue(fields()[11]);
        record.userid = fieldSetFlags()[12] ? this.userid : (java.lang.Long) defaultValue(fields()[12]);
        record.courseid = fieldSetFlags()[13] ? this.courseid : (java.lang.Long) defaultValue(fields()[13]);
        record.relateduserid = fieldSetFlags()[14] ? this.relateduserid : (java.lang.Long) defaultValue(fields()[14]);
        record.anonymous = fieldSetFlags()[15] ? this.anonymous : (java.lang.Integer) defaultValue(fields()[15]);
        record.other = fieldSetFlags()[16] ? this.other : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.timecreated = fieldSetFlags()[17] ? this.timecreated : (java.lang.Long) defaultValue(fields()[17]);
        record.origin = fieldSetFlags()[18] ? this.origin : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.ip = fieldSetFlags()[19] ? this.ip : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.realuserid = fieldSetFlags()[20] ? this.realuserid : (java.lang.Long) defaultValue(fields()[20]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
          WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
          throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
          READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
          throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
